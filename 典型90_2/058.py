# 入力を受け取る
N, K = map(int, input().split())

# 既に表示された数字を記録するためのリスト
seen = [False] * 100000
# 表示される数字の変化を記録するリスト
loop = []
now = N
now = sum(map(int, str(now))) + now
now = now % 100000
cnt = 0

# K回の操作を行うか、既に表示された数字が再度表示されるまでのループ
while cnt < K and not seen[now]:
    cnt += 1
    # 既に表示された数字をTrueにする
    seen[now] = True
    # 表示される数字をloopリストに追加
    loop.append(now)
    # 次に表示される数字を計算
    next_num = sum(map(int, str(now))) + now
    now = next_num % 100000

# 最後の数字をloopリストに追加
loop.append(now)

# K回の操作が終了した場合
if K == cnt:
    print(loop[-2])
    exit()

# 周期的な変化が始まるタイミングを求める
head = loop.index(now)
# loopリストの最後のインデックス
tail = len(loop) - 1
# 周期の大きさを求める
loop_len = tail - head
# K回の操作後の数字を計算して出力
print(loop[(K - head - 1) % loop_len + head])



"""
問題文 
あなたは奇妙な電卓を持っています。この電卓は 0 以上 10^5−1 以下の整数を 1 つ表示できます。この電卓には ボタンA と呼ばれるボタンがあります。整数 x が表示されているときに ボタンA を 1 回押すと、次の処理が順番に行われます。 x を十進法で表したときの各桁の和を計算し、 y とする。 x+y を 10 5 で割ったあまりを計算し、 z とする。 表示されている整数を z に変更する。 例えば、 99999 が表示されているときに ボタンA を 1 回押すと、 99999+(9+9+9+9+9)=100044 なので、表示される整数は 44 に変更されます。 今、この電卓に N が表示されています。 ボタンA を K 回押した後に表示されている整数を求めて下さい。


盛り込みたい内容
周期性をみる
今回は、電卓に表示される数字zは必ず10^5以下の数字になります。
(x+y)%10000 = zより
また、2回異常出る数字に関しては、規則性を持って進みます。
ex)

2度目に同じ値になった瞬間から、値の変化は周期的になります。
そのため、
K回の操作 = 周期に入る前の操作回数 + 周期の大きさ*周期の回数で表せます。
周期に入る前の操作回数と周期の大きさは必ず10^5以下なので、探索することが可能です。
(周期に入る前の操作回数と周期の大きさが分かれば、周期の回数は計算できる)

そのため、周期が始まるタイミングと周期の大きさが求まれば、K回後の値は計算で求まります。
"""
