"""
問題文 整数 x が書かれたボールに対し、そのボールを叩くことによって以下の操作が行われます。 x が素数でない場合：叩かれたボールを消滅させ、整数 a が書かれたボールと整数 b が書かれたボールを追加する。 a,b は ab=x かつ a≥2, b≥2 を満たす整数から自由に選ぶことができる。 x が素数である場合：なにも起こらない。 また、魔法を 1 回使うと、現在あるすべてのボールを同時に叩くことができます。一方、魔法を使う以外の手段でボールを叩くことはできません。 さて、整数 N が書かれたボールが 1 個だけあります。あなたは何回か魔法を使うことで、すべてのボールに書かれている数を素数にしたいです。最小で何回の操作を行う必要がありますか？
"""

def tameshi(n):
  ret = []
  for i in range(2, int(n ** (1 / 2)) + 1):
    if i > n:break
    while n % i == 0:
      n //= i
      ret.append(i)
  if n != 1:
    ret.append(n)
  return ret

n = int(input())
prime_cnt = len(tameshi(n))

cnt = 0
while True:
    if 2**(cnt) >= prime_cnt:
        print(cnt)
        break
    else:
        cnt += 1

"""
整数xを叩くと、2つの因数に分かれます。
つまり、最大の因数の数は2**作業回数となります。

最大の因数の数は試し割り法などで十分高速に求まりますので、その値を使用することで、最小の作業回数がわかります。
"""