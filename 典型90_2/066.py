#転倒数　

"""
#問題文 数列屋の高橋くんは長さ N の数列 a を作っています。数列 a の i 番目の要素 a i ​ の値は、 L i ​ 以上 R i ​ 以下の 整数 から一様ランダムに選ぶことで決定されます。 このようにしてできた数列 a の転倒数の期待値を求めてください。 なお、長さ m の数列 x の「転倒数」とは、 i<j かつ x i ​ >x j ​ であるような (i,j) (1≤i,j≤m) の個数のことです。
"""
N = int(input())

if N == 1:
    print(0)
    exit()

lr = [list(map(int, input().split())) for _ in range(N)]  # [l, r]のペアを格納
ans = 0

for i in range(N):
    for j in range(i+1, N):
        l1, r1 = lr[i]
        l2, r2 = lr[j]

        all_cnt = (r1 - l1 + 1) * (r2 - l2 + 1)
        cnt = 0

        for val in range(l1, r1 + 1):
            if r2 <= val-1:
                cnt += r2-l2+1
            elif l2 <= val-1 < r2:
                cnt += val-1-l2+1
            else:
                continue
        ans += cnt / all_cnt  # 期待値を足す

print(ans)





"""
この問題では、各要素 \(a_i\) が範囲 \(L_i\) から \(R_i\) の整数からランダムに選ばれ、そのようにしてできた数列 \(a\) の転倒数の期待値を求める必要があります。転倒数とは、数列内での \(i < j\) かつ \(a_i > a_j\) となる組み合わせの数です。


期待値を求める問題です。

今回期待値は以下の計算で求まります。
A[i]>A[j]の数/A[i],A[j]のありうる組み合わせの数

A[i],A[j]のありうる組み合わせの数
ある任意のi,jを選んだ時、\(a_i\) と \(a_j\) の全ての可能な組み合わせの数((r1 - l1 + 1) * (r2 - l2 + 1)\) 
 `a_i` と `a_j` の可能な組み合わせの数を計算するために、各要素が取りうる値の範囲を考えます。
- `a_i` の取りうる値の範囲は `l1` から `r1` までですので、`a_i` が取り得る値の数は `(r1 - l1 + 1)` になります。
ex) [2-4]の場合、取りうる数は2,3,4の3通り(4-2+1)
- 同様に、`a_j` の取り得る値の数は `(r2 - l2 + 1)` になります。

任意のi,jのうちA[i]>A[j]の数に関して
ここから、任意のA[i],A[j]について転倒数の数を数えていきます。
具体的にどのように考えるかというと、
A_iの[L,R]の値valについて、[L2,R2]の中にvalよりも小さい数の個数を計算します
for val in range(l1, r1 + 1):
    cnt += max(0, min(r2, val - 1) - l2 + 1) 

R2<valのときは[L2,R2]すべてがvalいかとなるため
R2-L2+1
<L2val<R2のときは[L2,val)の区間が転倒数となる
val-1-L2+1 (未満なのでval-1してる)
val<L2のときは転倒数は発生しない
0


今回、N<100,L,R<100なので、
i,jの組み合わせは100*99/2
各i,jについて転倒数の数え上げは100
よって合計の計算量はO(10*6)で十分高速です。

"""